// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/v1/posts": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin/posts"
                ],
                "summary": "Paginate posts",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Post number",
                        "name": "post_num",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "open",
                            "open",
                            "closed",
                            "completed",
                            "canceled"
                        ],
                        "type": "string",
                        "description": "Post status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Delivery date",
                        "name": "delivery_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "seller_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "default": 0,
                        "description": "Page (0-based)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin/posts"
                ],
                "summary": "Create post",
                "parameters": [
                    {
                        "description": "Post body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.createPostForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/posts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/posts"
                ],
                "summary": "Paginate posts",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Post number",
                        "name": "post_num",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "open",
                            "open",
                            "closed",
                            "completed",
                            "canceled"
                        ],
                        "type": "string",
                        "description": "Post status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Delivery date",
                        "name": "delivery_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "seller_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "default": 0,
                        "description": "Page (0-based)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include post body",
                        "name": "include_post_body",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.PaginatedResult-client_paginatedPost"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        },
        "/api/client/v1/posts/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/post"
                ],
                "summary": "Get post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.Result"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/client.normalPost"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.createPostForm": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Image"
                    }
                },
                "is_in_stock": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "price": {
                                "type": "number"
                            },
                            "stock": {
                                "type": "number"
                            }
                        }
                    }
                },
                "post_num": {
                    "type": "integer"
                },
                "seller_id": {
                    "type": "string"
                },
                "storage_type": {
                    "$ref": "#/definitions/post.StorageType"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "client.normalPost": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "comment_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Image"
                    }
                },
                "like_count": {
                    "type": "integer"
                },
                "order_count": {
                    "type": "integer"
                },
                "post_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PostItem"
                    }
                },
                "post_num": {
                    "type": "integer"
                },
                "seller": {
                    "type": "object",
                    "properties": {
                        "display_name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "picture_url": {
                            "type": "string"
                        }
                    }
                },
                "seller_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/post.Status"
                },
                "storage_type": {
                    "$ref": "#/definitions/post.StorageType"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "client.paginatedPost": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "comment_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Image"
                    }
                },
                "like_count": {
                    "type": "integer"
                },
                "order_count": {
                    "type": "integer"
                },
                "post_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PostItem"
                    }
                },
                "post_num": {
                    "type": "integer"
                },
                "seller": {
                    "type": "object",
                    "properties": {
                        "display_name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "picture_url": {
                            "type": "string"
                        }
                    }
                },
                "seller_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/post.Status"
                },
                "storage_type": {
                    "$ref": "#/definitions/post.StorageType"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ent.PostItem": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "identifier": {
                    "description": "Identifier holds the value of the \"identifier\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "post_id": {
                    "description": "PostID holds the value of the \"post_id\" field.",
                    "type": "string"
                },
                "price": {
                    "description": "Price holds the value of the \"price\" field.",
                    "type": "number"
                },
                "stock": {
                    "description": "Stock holds the value of the \"stock\" field.",
                    "type": "number"
                }
            }
        },
        "post.Status": {
            "type": "string",
            "enum": [
                "open",
                "open",
                "closed",
                "completed",
                "canceled"
            ],
            "x-enum-varnames": [
                "DefaultStatus",
                "StatusOpen",
                "StatusClosed",
                "StatusCompleted",
                "StatusCanceled"
            ]
        },
        "post.StorageType": {
            "type": "string",
            "enum": [
                "roomTemp",
                "farmGoods",
                "refrigerated",
                "frozen"
            ],
            "x-enum-varnames": [
                "StorageTypeRoomTemp",
                "StorageTypeFarmGoods",
                "StorageTypeRefrigerated",
                "StorageTypeFrozen"
            ]
        },
        "schema.Image": {
            "type": "object",
            "properties": {
                "lg": {
                    "type": "string"
                },
                "md": {
                    "type": "string"
                },
                "sm": {
                    "type": "string"
                }
            }
        },
        "utils.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "utils.PaginatedResult-client_paginatedPost": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/client.paginatedPost"
                    }
                },
                "has_more": {
                    "type": "boolean"
                }
            }
        },
        "utils.Result": {
            "type": "object",
            "properties": {
                "data": {}
            }
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "Bearer token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Tuango API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

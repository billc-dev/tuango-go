// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/admin/v1/posts": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin/posts"
                ],
                "summary": "Paginate posts",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Post number",
                        "name": "post_num",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "open",
                            "open",
                            "closed",
                            "completed",
                            "canceled"
                        ],
                        "type": "string",
                        "description": "Post status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Delivery date",
                        "name": "delivery_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "seller_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "default": 0,
                        "description": "Page (0-based)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin/posts"
                ],
                "summary": "Create post",
                "parameters": [
                    {
                        "description": "Post body",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.createPostForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/orders": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/orders"
                ],
                "summary": "Create order",
                "parameters": [
                    {
                        "description": "Order form",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/client.orderForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-client_createOrderData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/orders/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/orders"
                ],
                "summary": "Cancel order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/posts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/posts"
                ],
                "summary": "Paginate posts",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Post number",
                        "name": "post_num",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "open",
                            "open",
                            "closed",
                            "completed",
                            "canceled"
                        ],
                        "type": "string",
                        "description": "Post status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Text",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Deadline",
                        "name": "deadline",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Delivery date",
                        "name": "delivery_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Seller ID",
                        "name": "seller_id",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "default": 0,
                        "description": "Page (0-based)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include post body",
                        "name": "include_post_body",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.InfinitePaginatedResult-client_paginatedPost"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/posts/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/posts"
                ],
                "summary": "Get post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-client_normalPost"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/posts/{id}/like": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/posts"
                ],
                "summary": "Like post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/posts"
                ],
                "summary": "Unlike post",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-bool"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/posts/{id}/orders": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/posts"
                ],
                "summary": "Get post orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Post ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-array_client_postOrder"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/user": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/user"
                ],
                "summary": "Get user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-client_getUserData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/user/likes": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/likes"
                ],
                "summary": "Get likes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-array_ent_Like"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/client/v1/user/login/line/{code}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client/user"
                ],
                "summary": "Line login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Line login code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Line login redirect uri",
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.Result-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "admin.createPostForm": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Image"
                    }
                },
                "is_in_stock": {
                    "type": "boolean"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "price": {
                                "type": "number"
                            },
                            "stock": {
                                "type": "number"
                            }
                        }
                    }
                },
                "post_num": {
                    "type": "integer"
                },
                "seller_id": {
                    "type": "string"
                },
                "storage_type": {
                    "$ref": "#/definitions/post.StorageType"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "client.createOrderData": {
            "type": "object",
            "properties": {
                "comment": {
                    "description": "Comment holds the value of the \"comment\" field.",
                    "type": "string"
                },
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "fb": {
                    "description": "Fb holds the value of the \"fb\" field.",
                    "type": "boolean"
                },
                "has_name": {
                    "description": "HasName holds the value of the \"has_name\" field.",
                    "type": "boolean"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "is_extra": {
                    "description": "IsExtra holds the value of the \"is_extra\" field.",
                    "type": "boolean"
                },
                "is_in_stock": {
                    "description": "IsInStock holds the value of the \"is_in_stock\" field.",
                    "type": "boolean"
                },
                "order_num": {
                    "description": "OrderNum holds the value of the \"order_num\" field.",
                    "type": "integer"
                },
                "post": {
                    "type": "object",
                    "properties": {
                        "body": {
                            "type": "string"
                        },
                        "comment_count": {
                            "type": "integer"
                        },
                        "created_at": {
                            "type": "string"
                        },
                        "deadline": {
                            "type": "string"
                        },
                        "delivery_date": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "images": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schema.Image"
                            }
                        },
                        "like_count": {
                            "type": "integer"
                        },
                        "order_count": {
                            "type": "integer"
                        },
                        "post_items": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.PostItem"
                            }
                        },
                        "post_num": {
                            "type": "integer"
                        },
                        "seller": {
                            "type": "object",
                            "properties": {
                                "display_name": {
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "picture_url": {
                                    "type": "string"
                                }
                            }
                        },
                        "seller_id": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/post.Status"
                        },
                        "storage_type": {
                            "$ref": "#/definitions/post.StorageType"
                        },
                        "title": {
                            "type": "string"
                        }
                    }
                },
                "post_id": {
                    "description": "PostID holds the value of the \"post_id\" field.",
                    "type": "string"
                },
                "seller_comment": {
                    "description": "SellerComment holds the value of the \"seller_comment\" field.",
                    "type": "string"
                },
                "status": {
                    "description": "Status holds the value of the \"status\" field.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/order.Status"
                        }
                    ]
                },
                "updated_at": {
                    "description": "UpdatedAt holds the value of the \"updated_at\" field.",
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID holds the value of the \"user_id\" field.",
                    "type": "string"
                }
            }
        },
        "client.getUserData": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "notified": {
                    "type": "boolean"
                },
                "pickup_num": {
                    "type": "number"
                },
                "picture_url": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/user.Role"
                },
                "status": {
                    "$ref": "#/definitions/user.Status"
                }
            }
        },
        "client.normalPost": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "comment_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Image"
                    }
                },
                "like_count": {
                    "type": "integer"
                },
                "order_count": {
                    "type": "integer"
                },
                "post_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PostItem"
                    }
                },
                "post_num": {
                    "type": "integer"
                },
                "seller": {
                    "type": "object",
                    "properties": {
                        "display_name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "picture_url": {
                            "type": "string"
                        }
                    }
                },
                "seller_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/post.Status"
                },
                "storage_type": {
                    "$ref": "#/definitions/post.StorageType"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "client.orderForm": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "order": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "postId": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "client.paginatedPost": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "comment_count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schema.Image"
                    }
                },
                "like_count": {
                    "type": "integer"
                },
                "order_count": {
                    "type": "integer"
                },
                "post_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.PostItem"
                    }
                },
                "post_num": {
                    "type": "integer"
                },
                "seller": {
                    "type": "object",
                    "properties": {
                        "display_name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "picture_url": {
                            "type": "string"
                        }
                    }
                },
                "seller_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/post.Status"
                },
                "storage_type": {
                    "$ref": "#/definitions/post.StorageType"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "client.postOrder": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "fb": {
                    "type": "boolean"
                },
                "has_name": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_extra": {
                    "type": "boolean"
                },
                "is_in_stock": {
                    "type": "boolean"
                },
                "order_items": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "has_name": {
                                "type": "boolean"
                            },
                            "id": {
                                "type": "string"
                            },
                            "identifier": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "order_id": {
                                "type": "string"
                            },
                            "post_item_id": {
                                "type": "string"
                            },
                            "price": {
                                "type": "number"
                            },
                            "qty": {
                                "type": "number"
                            },
                            "status": {
                                "$ref": "#/definitions/orderitem.Status"
                            }
                        }
                    }
                },
                "order_num": {
                    "type": "integer"
                },
                "post_id": {
                    "type": "string"
                },
                "seller_comment": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/order.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "display_name": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        },
                        "picture_url": {
                            "type": "string"
                        }
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "ent.Like": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "CreatedAt holds the value of the \"created_at\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "post_id": {
                    "description": "PostID holds the value of the \"post_id\" field.",
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID holds the value of the \"user_id\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PostItem": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "identifier": {
                    "description": "Identifier holds the value of the \"identifier\" field.",
                    "type": "string"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "post_id": {
                    "description": "PostID holds the value of the \"post_id\" field.",
                    "type": "string"
                },
                "price": {
                    "description": "Price holds the value of the \"price\" field.",
                    "type": "number"
                },
                "stock": {
                    "description": "Stock holds the value of the \"stock\" field.",
                    "type": "number"
                }
            }
        },
        "order.Status": {
            "type": "string",
            "enum": [
                "ordered",
                "confirmed",
                "delivered",
                "completed",
                "missing",
                "canceled"
            ],
            "x-enum-varnames": [
                "StatusOrdered",
                "StatusConfirmed",
                "StatusDelivered",
                "StatusCompleted",
                "StatusMissing",
                "StatusCanceled"
            ]
        },
        "orderitem.Status": {
            "type": "string",
            "enum": [
                "ordered",
                "confirmed",
                "delivered",
                "completed",
                "missing",
                "canceled"
            ],
            "x-enum-varnames": [
                "StatusOrdered",
                "StatusConfirmed",
                "StatusDelivered",
                "StatusCompleted",
                "StatusMissing",
                "StatusCanceled"
            ]
        },
        "post.Status": {
            "type": "string",
            "enum": [
                "open",
                "open",
                "closed",
                "completed",
                "canceled"
            ],
            "x-enum-varnames": [
                "DefaultStatus",
                "StatusOpen",
                "StatusClosed",
                "StatusCompleted",
                "StatusCanceled"
            ]
        },
        "post.StorageType": {
            "type": "string",
            "enum": [
                "roomTemp",
                "farmGoods",
                "refrigerated",
                "frozen"
            ],
            "x-enum-varnames": [
                "StorageTypeRoomTemp",
                "StorageTypeFarmGoods",
                "StorageTypeRefrigerated",
                "StorageTypeFrozen"
            ]
        },
        "schema.Image": {
            "type": "object",
            "properties": {
                "lg": {
                    "type": "string"
                },
                "md": {
                    "type": "string"
                },
                "sm": {
                    "type": "string"
                }
            }
        },
        "user.Role": {
            "type": "string",
            "enum": [
                "basic",
                "basic",
                "seller",
                "admin"
            ],
            "x-enum-varnames": [
                "DefaultRole",
                "RoleBasic",
                "RoleSeller",
                "RoleAdmin"
            ]
        },
        "user.Status": {
            "type": "string",
            "enum": [
                "registered",
                "registered",
                "approved",
                "blocked"
            ],
            "x-enum-varnames": [
                "DefaultStatus",
                "StatusRegistered",
                "StatusApproved",
                "StatusBlocked"
            ]
        },
        "utils.InfinitePaginatedResult-client_paginatedPost": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/client.paginatedPost"
                    }
                },
                "has_more": {
                    "type": "boolean"
                }
            }
        },
        "utils.Result-array_client_postOrder": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/client.postOrder"
                    }
                }
            }
        },
        "utils.Result-array_ent_Like": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Like"
                    }
                }
            }
        },
        "utils.Result-bool": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean"
                }
            }
        },
        "utils.Result-client_createOrderData": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/client.createOrderData"
                }
            }
        },
        "utils.Result-client_getUserData": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/client.getUserData"
                }
            }
        },
        "utils.Result-client_normalPost": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/client.normalPost"
                }
            }
        },
        "utils.Result-string": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "Bearer token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Tuango API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
